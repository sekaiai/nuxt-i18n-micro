import{_ as i,c as a,a2 as n,o as e}from"./chunks/framework.DUqP40Ch.js";const d=JSON.parse('{"title":"üìñ Per-Component Translations in Nuxt I18n Micro","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/per-component-translations.md","filePath":"guide/per-component-translations.md","lastUpdated":1726216827000}'),t={name:"guide/per-component-translations.md"};function l(h,s,p,r,o,k){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="üìñ-per-component-translations-in-nuxt-i18n-micro" tabindex="-1">üìñ Per-Component Translations in <code>Nuxt I18n Micro</code> <a class="header-anchor" href="#üìñ-per-component-translations-in-nuxt-i18n-micro" aria-label="Permalink to &quot;üìñ Per-Component Translations in \`Nuxt I18n Micro\`&quot;">‚Äã</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">‚Äã</a></h2><p><code>Per-Component Translations</code> in <code>Nuxt I18n Micro</code> allows developers to define translations directly within specific components or pages of a Nuxt application using the <code>$defineI18nRoute</code> function. This approach is ideal for managing localized content that is unique to individual components, providing a more modular and maintainable method for handling translations.</p><h2 id="definei18nroute-function" tabindex="-1"><code>$defineI18nRoute</code> Function <a class="header-anchor" href="#definei18nroute-function" aria-label="Permalink to &quot;\`$defineI18nRoute\` Function&quot;">‚Äã</a></h2><p>The <code>$defineI18nRoute</code> function configures route behavior based on the current locale, offering a versatile solution to:</p><ul><li>Control access to specific routes based on available locales.</li><li>Provide translations for specific locales.</li><li>Set custom routes for different locales.</li></ul><h3 id="method-signature" tabindex="-1">Method Signature <a class="header-anchor" href="#method-signature" aria-label="Permalink to &quot;Method Signature&quot;">‚Äã</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$defineI18nRoute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(routeDefinition: { </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  locales?: string[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Record</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">string, Record&lt;string, TranslationObject&gt;&gt;, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  localeRoutes?: Record</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">string, string&gt; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">‚Äã</a></h3><ul><li><p><strong>locales:</strong> Defines which locales are available for the route. This can be:</p><ul><li>An array of strings, where each string is an available locale (e.g., <code>[&#39;en&#39;, &#39;fr&#39;, &#39;de&#39;]</code>).</li><li>An object where each key is a locale code, and the value is an object containing translations or an empty object if no translations are needed.</li></ul></li><li><p><strong>localeRoutes:</strong> Allows custom routes for specific locales. Each key represents a locale code, and the value is the custom route path for that locale. This is useful for scenarios where different locales require unique routing.</p></li></ul><h3 id="example-usage" tabindex="-1">Example Usage <a class="header-anchor" href="#example-usage" aria-label="Permalink to &quot;Example Usage&quot;">‚Äã</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$defineI18nRoute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  locales: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    en: { greeting: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, farewell: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Goodbye&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ru: { greeting: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;–ü—Ä–∏–≤–µ—Ç&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, farewell: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;–î–æ —Å–≤–∏–¥–∞–Ω–∏—è&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    de: { greeting: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hallo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, farewell: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Auf Wiedersehen&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  localeRoutes: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ru: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/localesubpage&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Custom route path for the Russian locale</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="use-cases" tabindex="-1">Use Cases <a class="header-anchor" href="#use-cases" aria-label="Permalink to &quot;Use Cases&quot;">‚Äã</a></h2><ol><li><p><strong>Controlling Access Based on Locales:</strong> Define which locales are allowed for specific routes to ensure users only see content relevant to their language.</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { useNuxtApp } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;#imports&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$defineI18nRoute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useNuxtApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$defineI18nRoute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  locales: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;en&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fr&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;de&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Only these locales are allowed for this route</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div></li><li><p><strong>Providing Translations for Locales:</strong> Use the <code>locales</code> object to provide specific translations for each route, enhancing the user experience by delivering content in the user&#39;s preferred language.</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { useNuxtApp } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;#imports&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$defineI18nRoute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useNuxtApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$defineI18nRoute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  locales: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    en: { greeting: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, farewell: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Goodbye&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fr: { greeting: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Bonjour&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, farewell: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Au revoir&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    de: { greeting: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hallo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, farewell: { aaa: { bbb: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Auf Wiedersehen&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } } },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ru: {} </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Russian locale is allowed but no translations are provided</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div></li><li><p><strong>Custom Routing for Locales:</strong> Define custom paths for specific locales using the <code>localeRoutes</code> property. This allows you to create unique navigational flows or URL structures for different languages or regions.</p></li></ol><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">‚Äã</a></h2><ul><li><strong>Keep Translations Close to Components:</strong> Define translations directly within the relevant component to keep localized content organized and maintainable.</li><li><strong>Use Locale Objects for Flexibility:</strong> Utilize the object format for the <code>locales</code> property when specific translations or access control based on locales are required.</li><li><strong>Document Custom Routes:</strong> Clearly document any custom routes set for different locales to maintain clarity and simplify development and maintenance.</li></ul><p>Here&#39;s an example of a Vue page using <code>defineI18nRoute</code> for per-component translations:</p><h2 id="example-vue-page-with-per-component-translations" tabindex="-1">Example: Vue Page with Per-Component Translations <a class="header-anchor" href="#example-vue-page-with-per-component-translations" aria-label="Permalink to &quot;Example: Vue Page with Per-Component Translations&quot;">‚Äã</a></h2><p>Below is an example of how to use <code>$defineI18nRoute</code> within a Vue component to handle translations and custom routing based on locale.</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;{{ t(&#39;greeting&#39;) }}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;{{ t(&#39;farewell&#39;) }}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { useNuxtApp } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;#imports&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Access the $defineI18nRoute function from Nuxt&#39;s context</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$defineI18nRoute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useNuxtApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Define i18n route with translations for specific locales</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$defineI18nRoute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  locales: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    en: { greeting: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, farewell: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Goodbye&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fr: { greeting: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Bonjour&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, farewell: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Au revoir&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    de: { greeting: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hallo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, farewell: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Auf Wiedersehen&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ru: { greeting: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;–ü—Ä–∏–≤–µ—Ç&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, farewell: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;–î–æ —Å–≤–∏–¥–∞–Ω–∏—è&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  localeRoutes: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ru: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/ru-specific-path&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Custom route path for the Russian locale</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fr: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/fr-specific-path&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Custom route path for the French locale</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="explanation" tabindex="-1">Explanation <a class="header-anchor" href="#explanation" aria-label="Permalink to &quot;Explanation&quot;">‚Äã</a></h2><ul><li><strong>Component-Level Translations:</strong> The translations are defined directly in the component using the <code>locales</code> property of <code>$defineI18nRoute</code>. This keeps translations closely tied to the component, making them easy to manage and update.</li><li><strong>Custom Routing:</strong> The <code>localeRoutes</code> property is used to set specific paths for different locales. This allows for unique navigational flows based on the user&#39;s language preference.</li></ul><p>This setup enables the component to display localized greetings and farewells based on the current locale, and it also allows for custom routes tailored to specific locales, enhancing the user experience by delivering content in the preferred language and structure.</p><h2 id="summary" tabindex="-1">Summary <a class="header-anchor" href="#summary" aria-label="Permalink to &quot;Summary&quot;">‚Äã</a></h2><p>The <code>Per-Component Translations</code> feature, powered by the <code>$defineI18nRoute</code> function, offers a powerful and flexible way to manage localization within your Nuxt application. By allowing localized content and routing to be defined at the component level, it helps create a highly customized and user-friendly experience tailored to the language and regional preferences of your audience.</p>`,25)]))}const c=i(t,[["render",l]]);export{d as __pageData,c as default};
